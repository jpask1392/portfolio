.button {
  max-width: 260px;

  @apply 
    w-full
    text-xl
    text-center
    inline-flex
    justify-center
    items-center
    uppercase
    font-bold
    font-header
    py-2.5
    px-12
    md:px-4
    leading-tight
    /* tracking-widest */
    transition-colors
    duration-300;
}

.button.primary {
  @apply bg-primary border border-primary text-secondary;

  &:hover {
    @apply bg-secondary border-secondary text-primary;
  }
}

.button.on-dark {
  @apply bg-primary;

  &:hover {
    @apply bg-white border-white text-primary;
  }
}

.button.on-primary {
  @apply bg-white text-primary;

  &:hover {
    @apply bg-white border-white text-primary;
  }
}

.button[disabled] {
  @apply bg-grayLight text-gray2 border-grayLight;

  &:hover {
    @apply bg-grayLight border-grayLight text-gray2 cursor-not-allowed;
  }
}

a.link {
  @apply underline uppercase font-bold text-xs cursor-pointer;
}

.has-effect {
  @apply transition-all;

  background-repeat: no-repeat;
  
  /* background-size values will repeat so we only need to declare them once */
  background-size: 
    0 1px, /* top & bottom */
    1px 100%; /* right & left */
  
  background-position: 
    0px 0px, /* top */
    100% 0px, /* right */
    0px calc(100% + 1px), /* bottom */
    0px 0px; /* left */
  
  /* Since we're sizing and positioning with the above properties, we only need to set up a simple solid-color gradients for each side */
  background-image: 
    linear-gradient(0deg, transparent, transparent),
    linear-gradient(0deg, transparent, transparent),
    linear-gradient(90deg, #0075FF, #0075FF),
    linear-gradient(0deg, transparent, transparent);
  
  transition-property: background-size;

  &:hover {
    background-size: 
      100% 1px, /* top & bottom */
      1px 100%; /* right & left */
  }
}
